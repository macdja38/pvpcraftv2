{"version":3,"sources":["../src/index.js"],"names":["utils","global","Promise","authJSON","fileName","adaptersJSON","console","log","r","require","servers","get","fallback","musicDB","availableAdapters","adaptersArray","e","MusicDB","MusicPlayer","ConfigJSON","adapterSettings","stringThrow","adapter","foundAdapter","find","a","name","push","commandHandler","register","moduleLoader","loadModules","loadAll","login"],"mappings":"AAAA;;;AAGA;;AACA;;;;AAGA;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAWA;;IAAYA,K;;AACZ;;;;AACA;;;;;;;;AArBAC,OAAOC,OAAP;AACA;;AAIA;;;AAKA;;AAEA,IAAIC,WAAW,yBAAe,EAACC,UAAU,MAAX,EAAf,CAAf;AACA,IAAIC,eAAe,yBAAe,EAACD,UAAU,UAAX,EAAf,CAAnB;AACAE,QAAQC,GAAR,CAAYJ,QAAZ;AACAG,QAAQC,GAAR,CAAYF,YAAZ;;AAEA,IAAIG,IAAIC,QAAQ,eAAR,EAAyB,EAACC,SAAS,CAACP,SAASQ,GAAT,CAAa,oBAAb,EAAmC,EAACC,UAAU,KAAX,EAAnC,CAAD,CAAV,EAAzB,CAAR;;AAMA,IAAIC,UAAU,sBAAYL,CAAZ,CAAd;;AAEA;;AAEA;;AAEA,IAAIM,oBAAoB,yBAAxB;;AAEAR,QAAQC,GAAR,CAAY,mBAAZ,EAAiCO,iBAAjC;;AAEA,IAAIC,gBAAgB,EAApB;;AAEA,IAAIC,IAAI;AACNhB,OADM;AAENa,SAFM;AAGNI,4BAHM;AAINC,oCAJM;AAKNC,kCALM;AAMNhB,UANM;AAONE,cAPM;AAQNU;AARM,CAAR;;AAWA,KAAK,IAAIK,eAAT,IAA4Bf,aAAaM,GAAb,CAAiB,UAAjB,EAA6B,EAACU,aAAa,oCAAd,EAA7B,CAA5B,EAA+G;AAC7Gf,UAAQC,GAAR,CAAYa,gBAAgBE,OAA5B;AACAhB,UAAQC,GAAR,CAAYO,kBAAkB,CAAlB,CAAZ;AACA,MAAIS,eAAeT,kBAAkBU,IAAlB,CAAuBC,KAAKA,EAAEC,IAAF,KAAWN,gBAAgBE,OAAvD,CAAnB;AACAhB,UAAQC,GAAR,CAAYgB,YAAZ;AACAR,gBAAcY,IAAd,CAAmB,IAAIJ,YAAJ,CAAiB,EAAEH,eAAF,EAAjB,CAAnB;AACD;;AAED,IAAIQ,iBAAiB,6BAAmBb,aAAnB,CAArB;;AAEA,KAAK,IAAIO,OAAT,IAAoBP,aAApB,EAAmC;AACjCO,UAAQO,QAAR,CAAiBD,cAAjB;AACD;;AAED,IAAIE,eAAe,2BAAiBd,CAAjB,CAAnB;;AAEAY,eAAeG,WAAf,CAA2BD,aAAaE,OAAb,EAA3B;;AAEA,KAAK,IAAIV,OAAT,IAAoBP,aAApB,EAAmC;AACjCO,UAAQW,KAAR;AACD","file":"index.js","sourcesContent":["/**\n * Created by macdja38 on 2016-08-07.\n */\n\"use strict\";\nimport Bluebird from \"bluebird\";\nglobal.Promise = Bluebird;\n// Import sources\nimport \"babel-core/register\";\nimport \"source-map-support/register\";\nimport ConfigJSON from \"./utils/configJSON.js\";\n//import Warframe from \"./Warframe\";\nimport adapters from \"./adapters\";\nimport ModuleLoader from \"./lib/ModuleLoader.js\";\nimport CommandHandler from \"./lib/CommandHandler.js\";\n\n// Instantiate Objects\n\nlet authJSON = new ConfigJSON({fileName: \"auth\"});\nlet adaptersJSON = new ConfigJSON({fileName: \"adapters\"});\nconsole.log(authJSON);\nconsole.log(adaptersJSON);\n\nlet r = require(\"rethinkdbdash\")({servers: [authJSON.get(\"database.rethinkdb\", {fallback: false})]});\n\nimport * as utils from \"./utils/utils\";\nimport MusicDB from \"./utils/MusicDB\";\nimport MusicPlayer from \"./utils/MusicPlayer\"\n\nlet musicDB = new MusicDB(r);\n\n// End instantiating Objects.\n\n// Start importing adapters\n\nlet availableAdapters = adapters();\n\nconsole.log(\"availableAdapters\", availableAdapters);\n\nlet adaptersArray = [];\n\nlet e = {\n  utils,\n  musicDB,\n  MusicDB,\n  MusicPlayer,\n  ConfigJSON,\n  authJSON,\n  adaptersJSON,\n  adaptersArray,\n};\n\nfor (let adapterSettings of adaptersJSON.get(\"adapters\", {stringThrow: \"adapters not defined in Adapter.js\"})) {\n  console.log(adapterSettings.adapter);\n  console.log(availableAdapters[0]);\n  let foundAdapter = availableAdapters.find(a => a.name === adapterSettings.adapter);\n  console.log(foundAdapter);\n  adaptersArray.push(new foundAdapter({ adapterSettings }));\n}\n\nlet commandHandler = new CommandHandler(adaptersArray);\n\nfor (let adapter of adaptersArray) {\n  adapter.register(commandHandler);\n}\n\nlet moduleLoader = new ModuleLoader(e);\n\ncommandHandler.loadModules(moduleLoader.loadAll());\n\nfor (let adapter of adaptersArray) {\n  adapter.login();\n}"]}