{"version":3,"sources":["../../src/adapters/Discordie.js"],"names":["DiscordieAdapter","constructor","configJSON","adapterSettings","_configJSON","_adapterSettings","_client","adapter","name","login","connect","token","auth","reconnect","startEvents","Dispatcher","on","console","log","User","username","e","_commandHandler","onMessage","DiscordieMessage","message","author","content","data","getChanges","before","after","guild","DiscordieGuild","_message","DiscordieUser"],"mappings":";;;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;ydARA;;;;AAUe,MAAMA,gBAAN,2BAAuC;AACpDC,cAAY,EAACC,UAAD,EAAaC,eAAb,EAAZ,EAA2C;AACzC;AACA;AACA,SAAKC,WAAL,GAAmBF,UAAnB;AACA,SAAKG,gBAAL,GAAwBF,eAAxB;AACA,SAAKG,OAAL,GAAe,yBAAf;AACD;;AAED,MAAIC,OAAJ,GAAc;AACZ,WAAO,WAAP;AACD;;AAED,aAAWC,IAAX,GAAkB;AAChB,WAAO,WAAP;AACD;;AAEKC,OAAN,GAAc;AAAA;;AAAA;AACZ,YAAM,MAAKH,OAAL,CAAaI,OAAb,CAAqB;AACzBC,eAAO,MAAKN,gBAAL,CAAsBO,IAAtB,CAA2BD,KADT;AAEzBE,mBAAW;AAFc,OAArB,CAAN;AAIA,YAAKC,WAAL;AALY;AAMb;;AAEDA,gBAAc;AACZ,SAAKR,OAAL,CAAaS,UAAb,CAAwBC,EAAxB,CAA2B,eAA3B,EAA4C,MAAM;AAChD;AACAC,cAAQC,GAAR,CAAa,kBAAgB,KAAKZ,OAAL,CAAaa,IAAb,CAAkBC,QAAS,GAAxD;AACA;AACD,KAJD;;AAMA,SAAKd,OAAL,CAAaS,UAAb,CAAwBC,EAAxB,CAA2B,gBAA3B,EAA6CK,KAAK;AAChD,WAAKC,eAAL,CAAqBC,SAArB,CAA+B,IAAIC,gBAAJ,CAAqBH,CAArB,CAA/B;AACAJ,cAAQC,GAAR,CAAa,cAAY,KAAKZ,OAAL,CAAaa,IAAb,CAAkBC,QAAS,MAAGC,EAAEI,OAAF,CAAUC,MAAV,CAAiBN,QAAS,MAAGC,EAAEI,OAAF,CAAUE,OAAQ,GAAtG;AACD,KAHD;;AAKA,SAAKrB,OAAL,CAAaS,UAAb,CAAwBC,EAAxB,CAA2B,mBAA3B,EAAgDK,KAAK;AACnDJ,cAAQC,GAAR,CAAYG,CAAZ,EADmD,CACnC;AAChB,YAAMO,OAAOP,EAAEQ,UAAF,EAAb;AACAZ,cAAQC,GAAR,CAAYU,KAAKE,MAAjB,EAHmD,CAGzB;AAC1Bb,cAAQC,GAAR,CAAYU,KAAKG,KAAjB,EAJmD,CAI1B;AAC1B,KALD;AAMD;AA3CmD;;kBAAjC/B,gB;AA8CrB,MAAMwB,gBAAN,2BAAuC;AACrCvB,cAAY,EAACwB,OAAD,EAAZ,EAAuB;AACrB,UAAMA,OAAN;AACD;;AAED,MAAIlB,OAAJ,GAAc;AACZ,WAAO,WAAP;AACD;;AAED,MAAIyB,KAAJ,GAAY;AACV,WAAO,IAAIC,cAAJ,CAAmB,KAAKC,QAAL,CAAcF,KAAjC,CAAP;AACD;;AAED,MAAIL,OAAJ,GAAc;AACZ,WAAO,KAAKO,QAAL,CAAcP,OAArB;AACD;;AAED,MAAID,MAAJ,GAAa;AACX,WAAO,IAAIS,aAAJ,CAAkB,KAAKD,QAAL,CAAcR,MAAhC,CAAP;AACD;AAnBoC;;AAsBvC,MAAMO,cAAN,yBAAmC;AACjChC,cAAY+B,KAAZ,EAAmB;AACjB,UAAMA,KAAN;AACD;AAHgC;;AAMnC,MAAMG,aAAN,wBAAiC;AAC/BlC,cAAY+B,KAAZ,EAAmB;AACjB,UAAMA,KAAN;AACD;AAH8B","file":"Discordie.js","sourcesContent":["/**\r\n * Created by macdja38 on 2016-09-18.\r\n */\r\n\r\nimport Adapter from \"./Adapter\";\r\nimport Discordie from \"discordie\";\r\nimport Message from \"../events/Message\";\r\nimport Guild from \"../events/Guild\";\r\nimport User from \"../events/User\";\r\n\r\nexport default class DiscordieAdapter extends Adapter {\r\n  constructor({configJSON, adapterSettings}) {\r\n    super();\r\n    //noinspection JSUnresolvedVariable\r\n    this._configJSON = configJSON;\r\n    this._adapterSettings = adapterSettings;\r\n    this._client = new Discordie();\r\n  }\r\n\r\n  get adapter() {\r\n    return \"discordie\"\r\n  }\r\n\r\n  static get name() {\r\n    return \"discordie\";\r\n  }\r\n\r\n  async login() {\r\n    await this._client.connect({\r\n      token: this._adapterSettings.auth.token,\r\n      reconnect: true\r\n    });\r\n    this.startEvents();\r\n  }\r\n\r\n  startEvents() {\r\n    this._client.Dispatcher.on(\"GATEWAY_READY\", () => {\r\n      /* eslint-disable */\r\n      console.log(`Connected as: ${this._client.User.username}`);\r\n      /* eslint-enable */\r\n    });\r\n\r\n    this._client.Dispatcher.on(\"MESSAGE_CREATE\", e => {\r\n      this._commandHandler.onMessage(new DiscordieMessage(e));\r\n      console.log(`discordie ${this._client.User.username} ${e.message.author.username} ${e.message.content}`);\r\n    });\r\n\r\n    this._client.Dispatcher.on(\"GUILD_ROLE_UPDATE\", e => {\r\n      console.log(e); //eslint-disable-line no-console\r\n      const data = e.getChanges();\r\n      console.log(data.before); //eslint-disable-line no-console\r\n      console.log(data.after); //eslint-disable-line no-console\r\n    });\r\n  }\r\n}\r\n\r\nclass DiscordieMessage extends Message {\r\n  constructor({message}) {\r\n    super(message);\r\n  }\r\n\r\n  get adapter() {\r\n    return \"discordie\"\r\n  }\r\n\r\n  get guild() {\r\n    return new DiscordieGuild(this._message.guild);\r\n  }\r\n\r\n  get content() {\r\n    return this._message.content;\r\n  }\r\n\r\n  get author() {\r\n    return new DiscordieUser(this._message.author);\r\n  }\r\n}\r\n\r\nclass DiscordieGuild extends Guild {\r\n  constructor(guild) {\r\n    super(guild);\r\n  }\r\n}\r\n\r\nclass DiscordieUser extends User {\r\n  constructor(guild) {\r\n    super(guild);\r\n  }\r\n}"]}