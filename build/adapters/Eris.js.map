{"version":3,"sources":["../../src/adapters/Eris.js"],"names":["ErisAdapter","constructor","configJSON","adapterSettings","_event","_configJSON","_adapterSettings","_client","auth","token","name","login","on","console","error","e","log","connect","startEvents","user","username","message","_commandHandler","onMessage","ErisMessage","author","content","client","adapter","guild","ErisGuild","_message","ErisUser","channel","reply","string","createMessage","id","mention"],"mappings":";;;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;ydARA;;;;AAUe,MAAMA,WAAN,2BAAkC;AAC/CC,cAAY,EAACC,UAAD,EAAaC,eAAb,EAAZ,EAA2C;AACzC;AACA;AACA,SAAKC,MAAL,GAAc,uBAAd;AACA,SAAKC,WAAL,GAAmBH,UAAnB;AACA,SAAKI,gBAAL,GAAwBH,eAAxB;AACA,SAAKI,OAAL,GAAe,mBAAY,KAAKD,gBAAL,CAAsBE,IAAtB,CAA2BC,KAAvC,CAAf;AACD;;AAED,aAAWC,IAAX,GAAkB;AAChB,WAAO,MAAP;AACD;;AAEKC,OAAN,GAAc;AAAA;;AAAA;AACZ,YAAKJ,OAAL,CAAaK,EAAb,CAAgB,OAAhB,EAAyB;AAAA,eAAKC,QAAQC,KAAR,CAAc,YAAd,EAA4BC,CAA5B,CAAL;AAAA,OAAzB;AACAF,cAAQG,GAAR,CAAY,MAAKX,WAAjB;AACA,YAAM,MAAKE,OAAL,CAAaU,OAAb,EAAN;AACA,YAAKC,WAAL;AAJY;AAKb;;AAEDA,gBAAc;AACZ,SAAKX,OAAL,CAAaK,EAAb,CAAgB,OAAhB,EAAyB,MAAM;AAC7B;AACAC,cAAQG,GAAR,CAAa,kBAAgB,KAAKT,OAAL,CAAaY,IAAb,CAAkBC,QAAS,GAAxD;AACA;AACD,KAJD;;AAMA,SAAKb,OAAL,CAAaK,EAAb,CAAgB,eAAhB,EAAiCS,WAAW;AAC1C,WAAKC,eAAL,CAAqBC,SAArB,CAA+B,IAAIC,WAAJ,CAAgBH,OAAhB,EAAyB,KAAKd,OAA9B,CAA/B;AACAM,cAAQG,GAAR,CAAa,SAAO,KAAKT,OAAL,CAAaY,IAAb,CAAkBC,QAAS,MAAGC,QAAQI,MAAR,CAAeL,QAAS,MAAGC,QAAQK,OAAQ,GAA7F;AACD,KAHD;AAID;AAhC8C;;kBAA5B1B,W;AAmCrB,MAAMwB,WAAN,2BAAkC;AAChCvB,cAAYoB,OAAZ,EAAqBM,MAArB,EAA6B;AAC3B,UAAMN,OAAN;AACA,SAAKd,OAAL,GAAeoB,MAAf;AACD;;AAED,MAAIC,OAAJ,GAAc;AACZ,WAAO,MAAP;AACD;;AAED,MAAIC,KAAJ,GAAY;AACV,WAAO,IAAIC,SAAJ,CAAc,KAAKC,QAAL,CAAcF,KAA5B,CAAP;AACD;;AAED,MAAIH,OAAJ,GAAc;AACZ,WAAO,KAAKK,QAAL,CAAcL,OAArB;AACD;;AAED,MAAID,MAAJ,GAAa;AACX,WAAO,IAAIO,QAAJ,CAAa,KAAKD,QAAL,CAAcN,MAA3B,CAAP;AACD;;AAED,MAAIE,MAAJ,GAAa;AACX,WAAO,KAAKpB,OAAZ;AACD;;AAED,MAAI0B,OAAJ,GAAc;AACZ,WAAO,KAAKF,QAAL,CAAcE,OAArB;AACD;;AAEDC,QAAMC,MAAN,EAAc;AACZ,WAAO,KAAK5B,OAAL,CAAa6B,aAAb,CAA2B,KAAKL,QAAL,CAAcE,OAAd,CAAsBI,EAAjD,EAAsD,IAAE,KAAKN,QAAL,CAAcN,MAAd,CAAqBa,OAAQ,OAAIH,MAAO,GAAhG,CAAP;AACD;AAhC+B;;AAmClC,MAAML,SAAN,yBAA8B;AAC5B7B,cAAY4B,KAAZ,EAAmB;AACjB,UAAMA,KAAN;AACD;AAH2B;;AAM9B,MAAMG,QAAN,wBAA4B;AAC1B/B,cAAYkB,IAAZ,EAAkB;AAChB,UAAMA,IAAN;AACD;;AAED;;;AAL0B","file":"Eris.js","sourcesContent":["/**\r\n * Created by macdja38 on 2016-09-18.\r\n */\r\n\r\nimport Adapter from \"./Adapter\";\r\nimport Discord from \"eris\";\r\nimport Message from \"../events/Message\";\r\nimport Guild from \"../events/Guild\";\r\nimport User from \"../events/User\";\r\n\r\nexport default class ErisAdapter extends Adapter {\r\n  constructor({configJSON, adapterSettings}) {\r\n    super();\r\n    //noinspection JSUnresolvedVariable\r\n    this._event = new Message();\r\n    this._configJSON = configJSON;\r\n    this._adapterSettings = adapterSettings;\r\n    this._client = new Discord(this._adapterSettings.auth.token);\r\n  }\r\n\r\n  static get name() {\r\n    return \"eris\";\r\n  }\r\n\r\n  async login() {\r\n    this._client.on(\"error\", e => console.error(\"Eris error\", e));\r\n    console.log(this._configJSON);\r\n    await this._client.connect();\r\n    this.startEvents();\r\n  }\r\n\r\n  startEvents() {\r\n    this._client.on(\"ready\", () => {\r\n      /* eslint-disable */\r\n      console.log(`Connected as: ${this._client.user.username}`);\r\n      /* eslint-enable */\r\n    });\r\n\r\n    this._client.on(\"messageCreate\", message => {\r\n      this._commandHandler.onMessage(new ErisMessage(message, this._client));\r\n      console.log(`eris ${this._client.user.username} ${message.author.username} ${message.content}`);\r\n    });\r\n  }\r\n}\r\n\r\nclass ErisMessage extends Message {\r\n  constructor(message, client) {\r\n    super(message);\r\n    this._client = client;\r\n  }\r\n\r\n  get adapter() {\r\n    return \"eris\";\r\n  }\r\n\r\n  get guild() {\r\n    return new ErisGuild(this._message.guild);\r\n  }\r\n\r\n  get content() {\r\n    return this._message.content;\r\n  }\r\n\r\n  get author() {\r\n    return new ErisUser(this._message.author);\r\n  }\r\n\r\n  get client() {\r\n    return this._client;\r\n  }\r\n\r\n  get channel() {\r\n    return this._message.channel;\r\n  }\r\n\r\n  reply(string) {\r\n    return this._client.createMessage(this._message.channel.id, `${this._message.author.mention}, ${string}`);\r\n  }\r\n}\r\n\r\nclass ErisGuild extends Guild {\r\n  constructor(guild) {\r\n    super(guild);\r\n  }\r\n}\r\n\r\nclass ErisUser extends User {\r\n  constructor(user) {\r\n    super(user);\r\n  }\r\n\r\n  /* get highestRole() {\r\n    return this._user.roles.reduce((prev, role) => !prev || role.position > prev.position || (role.position === prev.position && role.id < prev.id) ? role : prev);\r\n  } */\r\n}"]}