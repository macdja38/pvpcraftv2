{"version":3,"sources":["../../src/adapters/Eris.js"],"names":["ErisAdapter","constructor","configJSON","adapterSettings","_event","_configJSON","_adapterSettings","_client","auth","token","_ready","startReady","name","Promise","resolve","reject","on","ready","serverIds","guilds","map","g","id","login","console","error","e","log","connect","startEvents","hasOwnProperty","editStatus","status","game","user","username","message","_commandHandler","onMessage","ErisMessage","author","content","joinVoiceChannel","channelId","getGuild","ErisGuild","get","client","adapter","guild","_message","ErisUser","channel","reply","string","args","createMessage","mention","sendMessage"],"mappings":"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","file":"Eris.js","sourcesContent":["/**\n * Created by macdja38 on 2016-09-18.\n */\n\n\"use strict\";\nimport \"babel-core/register\";\nimport \"source-map-support/register\";\n\nimport Adapter from \"./Adapter\";\nimport Discord from \"eris\";\nimport Message from \"../events/Message\";\nimport Guild from \"../events/Guild\";\nimport User from \"../events/User\";\n\nexport default class ErisAdapter extends Adapter {\n  constructor({configJSON, adapterSettings}) {\n    super();\n    //noinspection JSUnresolvedVariable\n    this._event = new Message();\n    this._configJSON = configJSON;\n    this._adapterSettings = adapterSettings;\n    this._client = new Discord(this._adapterSettings.auth.token);\n    this._ready = this.startReady();\n  }\n\n  static get name() {\n    return \"eris\";\n  }\n\n  startReady() {\n    return new Promise((resolve, reject) => {\n      this._client.on(\"ready\", ()=>{\n        resolve(true);\n      })\n    })\n  }\n\n  get ready() {\n    return this._ready;\n  }\n\n  get serverIds() {\n    return this._client.guilds.map(g => g.id);\n  }\n\n  async login() {\n    this._client.on(\"error\", e => console.error(\"Eris error\", e));\n    console.log(this._configJSON);\n    await this._client.connect();\n    this.startEvents();\n  }\n\n  startEvents() {\n    this._client.on(\"ready\", () => {\n      if (this._adapterSettings.hasOwnProperty(\"status\")) {\n        this._client.editStatus(this._adapterSettings.status.status, this._adapterSettings.status.game);\n      }\n      /* eslint-disable */\n      console.log(`Connected as: ${this._client.user.username}`);\n      /* eslint-enable */\n    });\n\n    this._client.on(\"messageCreate\", message => {\n      this._commandHandler.onMessage(new ErisMessage(message, this._client));\n      console.log(`eris ${this._client.user.username} ${message.author.username} ${message.content}`);\n    });\n  }\n\n  joinVoiceChannel(channelId) {\n    return this._client.joinVoiceChannel(channelId);\n  }\n\n  getGuild(id) {\n    return new ErisGuild(this._client.guilds.get(id));\n  }\n}\n\nclass ErisMessage extends Message {\n  constructor(message, client) {\n    super(message);\n    this._client = client;\n  }\n\n  get adapter() {\n    return \"eris\";\n  }\n\n  get guild() {\n    return new ErisGuild(this._message.guild);\n  }\n\n  get content() {\n    return this._message.content;\n  }\n\n  get author() {\n    return new ErisUser(this._message.author);\n  }\n\n  get client() {\n    return this._client;\n  }\n\n  get channel() {\n    return this._message.channel;\n  }\n\n  reply(string, ...args) {\n    return this._client.createMessage(this._message.channel.id, `${this._message.author.mention}, ${string}`, ...args);\n  }\n\n  sendMessage(...args) {\n    return this.channel.createMessage(...args);\n  }\n}\n\nclass ErisGuild extends Guild {\n  constructor(guild) {\n    super(guild);\n  }\n}\n\nclass ErisUser extends User {\n  constructor(user) {\n    super(user);\n  }\n\n  /* get highestRole() {\n    return this._user.roles.reduce((prev, role) => !prev || role.position > prev.position || (role.position === prev.position && role.id < prev.id) ? role : prev);\n  } */\n}"]}