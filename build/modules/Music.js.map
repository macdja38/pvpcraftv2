{"version":3,"sources":["../../src/modules/Music.js"],"names":["requirements","table","Music","constructor","configDB","videoInfo","authJSON","musicDB","MusicPlayer","adaptersArray","adapters","players","Map","regionCode","apiKey","get","startConnections","forEach","a","ready","getAll","serverIds","then","queues","console","log","queue","guild","getGuild","id","voice","getChannel","voice_id","text","text_id","player","currentSong","set","play","link","user","add","init","getStreamUrl","info","getCachingInfoLink","hashedLink","createHash","update","digest","getCachingInfoHash","cachedInfo","getVid","hasOwnProperty","timeFetched","Date","now","getVideoInfo","saveVid","cachingSearch","string","cache","getSearch","response","search","saveSearch","catch","error","Promise","resolve","reject","requestUrl","method","uri","gzip","JSON","parse","body","getCachedDiscordFMPlaylist","getDiscordFMPlaylist","saveDiscordFMPlaylist","normalizeDiscordFMPlaylist","items","map","item","normalised","reqeustee","requestee","service","url","identifier"],"mappings":"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","file":"Music.js","sourcesContent":["/**\r\n * Created by macdja38 on 2016-11-26.\r\n */\r\n\"use strict\";\r\nimport \"babel-core/register\";\r\nimport \"source-map-support/register\";\r\nimport crypto from \"crypto\";\r\n\r\nimport Module from \"./Module\";\r\n\r\nlet requirements = [\"configDB\", \"musicDB\", \"configJSON\", \"musicPlayer\"];\r\n\r\nimport request from \"request\";\r\n\r\nlet table = \"music\";\r\n\r\nexport class Music extends Module {\r\n  constructor({ configDB, videoInfo, authJSON, musicDB, MusicPlayer, adaptersArray }) {\r\n    super();\r\n    this.adapters = adaptersArray;\r\n    this.MusicPlayer = MusicPlayer;\r\n    this.musicDB = musicDB;\r\n    this.videoInfo = videoInfo;\r\n    this.players = new Map([]);\r\n    this.regionCode = \"CA\";\r\n    this.apiKey = authJSON.get(\"apiKeys.youtube\", false);\r\n    this.startConnections();\r\n  }\r\n\r\n  startConnections() {\r\n    this.adapters.forEach(async a => {\r\n      await a.ready;\r\n      this.musicDB.getAll(...a.serverIds).then(queues => {\r\n        queues.forEach(queue => {\r\n          console.log(queue);\r\n          let guild = a.getGuild(queue.id);\r\n          if (!guild) return;\r\n          let voice = guild.getChannel(queue.voice_id);\r\n          let text = guild.getChannel(queue.text_id);\r\n          if (!text || !voice) return;\r\n          let player = new this.MusicPlayer(a, guild, text, voice, queue.queue, queue.currentSong, this.musicDB, this);\r\n          this.players.set(guild.id, player);\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  play(guild, link, user) {\r\n    let player = this.players.get(guild.id);\r\n    player.add(link, user);\r\n  }\r\n\r\n  init(guild) {\r\n\r\n  }\r\n\r\n  getStreamUrl(info) {\r\n    return this.videoInfo.getStreamUrl(info);\r\n  }\r\n\r\n  async getCachingInfoLink(link) {\r\n    let hashedLink = crypto.createHash(\"sha256\").update(link).digest(\"hex\");\r\n    return this.getCachingInfoHash(hashedLink, link)\r\n  }\r\n\r\n  async getCachingInfoHash(hashedLink, link) {\r\n    let cachedInfo = await this.musicDB.getVid(hashedLink);\r\n    console.log(\"resolving \", hashedLink);\r\n    if (cachedInfo && cachedInfo.hasOwnProperty(\"timeFetched\") && typeof cachedInfo.timeFetched === \"number\" && Date.now() - cachedInfo.timeFetched < 4 * 60 * 60 * 1000) return cachedInfo;\r\n    let info = await this.videoInfo.getVideoInfo(link);\r\n    console.log(\"Cache outdated. Fetched new info\");\r\n    this.musicDB.saveVid(hashedLink, link, info);\r\n    return info;\r\n  }\r\n\r\n  async cachingSearch(string) {\r\n    let cache = await this.musicDB.getSearch(string);\r\n    if (cache) return cache;\r\n    let response = await this.search(string);\r\n    this.musicDB.saveSearch(string, response).catch(error => console.error);\r\n    console.log(response);\r\n    return response;\r\n  }\r\n\r\n  search(string) {\r\n    return new Promise((resolve, reject) => {\r\n      let requestUrl = \"https://www.googleapis.com/youtube/v3/search\" +\r\n        `?part=snippet&q=${string}&key=${this.apiKey}&regionCode=${this.regionCode}`;\r\n      request({method: \"GET\", uri: requestUrl, gzip: true}, (error, response) => {\r\n        if (error) reject(error);\r\n        resolve(JSON.parse(response.body));\r\n      })\r\n    })\r\n  }\r\n\r\n  async getCachedDiscordFMPlaylist(id) {\r\n    let cache = await this.musicDB.getDiscordFMPlaylist(id);\r\n    if (cache) return cache;\r\n    let response = await this.getDiscordFMPlaylist(id);\r\n    this.musicDB.saveDiscordFMPlaylist(id, response);\r\n    console.log(response);\r\n    return response;\r\n  }\r\n\r\n  async getDiscordFMPlaylist(id) {\r\n    return new Promise((resolve, reject) => {\r\n      let requestUrl = `https://temp.discord.fm/libraries/${id}/json`;\r\n      request({method: \"GET\", uri: requestUrl, gzip: true}, (error, response) => {\r\n        if (error) reject(error);\r\n        resolve(this.normalizeDiscordFMPlaylist(JSON.parse(response.body)));\r\n      })\r\n    })\r\n  }\r\n\r\n  normalizeDiscordFMPlaylist(items) {\r\n    return items.map(item => {\r\n      let normalised = {};\r\n      if (item.hasOwnProperty(\"requestee\")) {\r\n        normalised.reqeustee = item.requestee;\r\n      }\r\n      if (item.service === \"YouTubeVideo\") {\r\n        normalised.url = `https://www.youtube.com/watch?v=${item.identifier}`;\r\n      } else if (item.service === \"SoundCloudTrack\") {\r\n        normalised.url = item.url;\r\n      }\r\n      return normalised;\r\n    })\r\n  }\r\n}\r\n\r\nexport default Music;"]}