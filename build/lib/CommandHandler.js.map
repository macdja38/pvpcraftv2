{"version":3,"sources":["../../src/lib/CommandHandler.js"],"names":["CommandHandler","constructor","_pingsRecieved","_pingsResponded","_pingsDelay","_pingsError","_commands","loadAllCommands","onMessage","message","userCommand","channel","prefixes","id","client","user","setLanguage","forEach","c","aliases","indexOf","command","exec","loadModules","modules","push","init"],"mappings":"AAAA;;;AAGA;;;;;;AACA;;AACA;;AAEA;;;;AACA;;;;;;AAEe,MAAMA,cAAN,CAAoB;AACjCC,gBAAc;AACZ,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,eAAL;AACD;;AAEDC,YAAUC,OAAV,EAAmB;AACjB,QAAIC,cAAc,6BAAM,EAAED,OAAF,EAAWE,SAASF,QAAQE,OAA5B,EAAqCC,UAAU,CAAC,IAAD,EAAO,GAAP,CAA/C,EAA4DC,IAAIJ,QAAQK,MAAR,CAAeC,IAAf,CAAoBF,EAApF,EAAN,CAAlB;AACAH,gBAAYM,WAAZ,CAAwB,IAAxB;AACA,SAAKV,SAAL,CAAeW,OAAf,CAAuBC,KAAK;AAC1B,UAAIA,EAAEC,OAAF,CAAUC,OAAV,CAAkBV,YAAYW,OAA9B,IAAyC,CAAC,CAA9C,EAAiD;AAC/CH,UAAEI,IAAF,CAAOZ,WAAP;AACD;AACF,KAJD;AAKD;;AAEDa,cAAYC,OAAZ,EAAqB;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACD;;AAEDjB,oBAAkB;AAChB,SAAKD,SAAL,GAAiB,EAAjB;AACA,8BAAWW,OAAX,CAAmBC,KAAKA,EAAED,OAAF,CAAUC,KAAK,KAAKZ,SAAL,CAAemB,IAAf,CAAoB,IAAIP,CAAJ,EAApB,CAAf,CAAxB;AACA,SAAKZ,SAAL,CAAeW,OAAf,CAAuBC,KAAKA,EAAEQ,IAAF,EAA5B;AACD;AA5BgC;kBAAd1B,c","file":"CommandHandler.js","sourcesContent":["/**\n * Created by macdja38 on 2016-09-20.\n */\n\"use strict\";\nimport \"babel-core/register\";\nimport \"source-map-support/register\";\n\nimport parse from \"./CommandParser\";\nimport Commands from \"../commands\";\n\nexport default class CommandHandler{\n  constructor() {\n    this._pingsRecieved = {};\n    this._pingsResponded = {};\n    this._pingsDelay = {};\n    this._pingsError = {};\n    this._commands = [];\n    this.loadAllCommands();\n  }\n\n  onMessage(message) {\n    let userCommand = parse({ message, channel: message.channel, prefixes: [\"!!\", \"*\"], id: message.client.user.id});\n    userCommand.setLanguage(\"en\");\n    this._commands.forEach(c => {\n      if (c.aliases.indexOf(userCommand.command) > -1) {\n        c.exec(userCommand);\n      }\n    });\n  }\n\n  loadModules(modules) {\n    this.modules = modules;\n  }\n\n  loadAllCommands() {\n    this._commands = [];\n    Commands().forEach(c => c.forEach(c => this._commands.push(new c())));\n    this._commands.forEach(c => c.init());\n  }\n}"]}