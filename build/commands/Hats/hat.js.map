{"version":3,"sources":["../../../src/commands/Hats/hat.js"],"names":["https","require","request","defaults","encoding","fs","Canvas","Image","requirements","Alerts","constructor","args","aliases","module","nodes","description","usage","exec","command","msg","message","avatarURL","author","imgPromise","getImageFromUrl","hatPromise","getImageFromFile","img","hatImg","process","nextTick","canvas","ctx","getContext","drawImage","rotate","stream","pngStream","buffers","on","buffer","push","Buffer","concat","sendMessage","name","file","errors","console","error","init","log","path","Promise","resolve","reject","readFile","err","data","src","url","get","res","image","from"],"mappings":"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","file":"hat.js","sourcesContent":["/**\n * Created by macdja38 on 2016-11-13.\n */\n\nvar https = new require('https');\n\nvar request = require('request').defaults({encoding: null});\n\nvar fs = require('fs');\n\nvar Canvas = require('canvas')\n  , Image = Canvas.Image;\n\nimport Command from \"../Command\";\n\nlet requirements = [\"Warframe\"];\n\nexport class Alerts extends Command {\n  constructor(...args) {\n    super(...args, {\n      aliases: [\"hat\"],\n      module: \"warframe\",\n      nodes: [\"warframe.alert\"],\n      description: \"Display the current warframe alerts.\",\n      usage: []\n    });\n  }\n\n  async exec(command) {\n    let msg = command.message;\n    let avatarURL = msg.author.avatarURL;\n\n    let imgPromise;\n    if (avatarURL) {\n      imgPromise = getImageFromUrl(avatarURL);\n    } else {\n      imgPromise = getImageFromUrl(\"https://canary.discordapp.com/assets/6debd47ed13483642cf09e832ed0bc1b.png\");\n    }\n    let hatPromise = getImageFromFile('./resources/hat.png');\n\n    let img = await imgPromise;\n    let hatImg = await hatPromise;\n\n    process.nextTick(() => {\n      try {\n        let canvas = new Canvas(128, 128), ctx = canvas.getContext('2d');\n        ctx.drawImage(img, 0, 0, 128, 128);\n        ctx.rotate(30 / 180);\n        ctx.drawImage(hatImg, -70, -55, 300, 130);\n        let stream = canvas.pngStream();\n        let buffers = [];\n        stream.on('data', (buffer) => {\n          buffers.push(buffer);\n        });\n        stream.on('end', () => {\n          let buffer = Buffer.concat(buffers);\n          command.sendMessage(\"Here is your hat!\", {name: \"hat.png\", file: buffer});\n        });\n      } catch(errors){\n        command.sendMessage(`Sorry the error ${errors} occurred while processing your command, make sure you have a non-default avatar`);\n        console.error(\"error\", errors);\n      }\n    })\n  }\n\n  init() {\n    console.log(\"Got init\");\n  }\n}\n\nexport default Alerts;\n\nfunction getImageFromFile(path) {\n  return new Promise((resolve, reject) => {\n    fs.readFile(path, (err, data) => {\n      if (err) return reject(err);\n      let img = new Image;\n      img.src = data;\n      resolve(img);\n    })\n  })\n}\n\nfunction getImageFromUrl(url) {\n  return new Promise((resolve, reject)=>{\n    request.get(url, (err, res, image)=> {\n      if(err) return reject(err);\n      let data = Buffer.from(image);\n      let img = new Image;\n      img.src = data;\n      resolve(img);\n    });\n  });\n}"]}