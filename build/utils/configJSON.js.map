{"version":3,"sources":["../../src/utils/configJSON.js"],"names":["fs","path","ConfigJSON","constructor","fileName","_fileName","_filePath","join","__dirname","_fileExamplePath","reload","rawFile","readFileSync","err","code","console","error","writeFileSync","Error","_data","JSON","parse","name","get","key","fallBack","failThrow","keys","split","_recursiveGet","data","fallback","length","shift","hasOwnProperty"],"mappings":"AAAA;;;AAGA;;;;;;AACA;;AACA;;AAEA;;IAAYA,E;;AACZ;;IAAYC,I;;;;AAEG,MAAMC,UAAN,CAAiB;AAC9B;;;;AAIAC,cAAY,EAACC,QAAD,EAAZ,EAAwB;AACtB,SAAKC,SAAL,GAAiBD,QAAjB;AACA,SAAKE,SAAL,GAAiBL,KAAKM,IAAL,CAAUC,SAAV,EAAsB,wBAAsB,KAAKH,SAAU,QAA3D,CAAjB;AACA,SAAKI,gBAAL,GAAwBR,KAAKM,IAAL,CAAUC,SAAV,EAAsB,yBAAuB,KAAKH,SAAU,gBAA5D,CAAxB;AACA,SAAKK,MAAL;AACD;;AAEDA,WAAS;AACP,QAAI;AACF,UAAIC,UAAUX,GAAGY,YAAH,CAAgB,KAAKN,SAArB,EAAgC,MAAhC,CAAd;AACD,KAFD,CAEE,OAAOO,GAAP,EAAY;AACZ,UAAIA,IAAIC,IAAJ,KAAa,QAAjB,EAA2B;AACzBC,gBAAQC,KAAR,CAAe,gBAAc,KAAKX,SAAU,mBAAgB,KAAKC,SAAU,2BAAwB,KAAKG,gBAAiB,kCAAzH;AACAT,WAAGiB,aAAH,CAAiB,KAAKX,SAAtB,EAAiCN,GAAGY,YAAH,CAAgB,KAAKH,gBAArB,EAAuC,MAAvC,CAAjC;AACAM,gBAAQC,KAAR,CAAe,gBAAc,KAAKX,SAAU,oBAAiB,KAAKC,SAAU,mCAA5E;AACA,cAAM,IAAIY,KAAJ,CAAW,YAAU,KAAKb,SAAU,QAApC,CAAN;AACD;AACF;;AAED,QAAI;AACF,WAAKc,KAAL,GAAaC,KAAKC,KAAL,CAAWV,OAAX,CAAb;AACD,KAFD,CAEE,OAAOE,GAAP,EAAY;AACZ,YAAM,IAAIK,KAAJ,CAAW,oBAAkB,KAAKI,IAAK,QAAvC,CAAN;AACD;AACF;;AAED;;;;;;;AAOAC,MAAIC,GAAJ,EAAS,EAACC,QAAD,EAAWC,SAAX,EAAT,EAAgC;AAC9B,QAAIA,SAAJ,EAAeA,YAAa,mBAAiBF,GAAI,wBAAqB,KAAKnB,SAAU,GAAtE;AACf,QAAIsB,OAAOH,IAAII,KAAJ,CAAU,GAAV,CAAX;AACA,WAAO,KAAKC,aAAL,CAAmBF,IAAnB,EAAyB,KAAKR,KAA9B,EAAqC,EAACM,QAAD,EAAWC,SAAX,EAArC,CAAP;AACD;;AAEDG,gBAAcF,IAAd,EAAoBG,IAApB,EAA0B,EAACC,QAAD,EAAWL,SAAX,EAA1B,EAAiD;AAC/C,QAAIC,KAAKK,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAOF,IAAP;AACD;AACD,QAAIN,MAAMG,KAAKM,KAAL,EAAV;AACA,QAAI,OAAOH,IAAP,KAAgB,QAAhB,IAA4BA,KAAKI,cAAL,CAAoBV,GAApB,CAAhC,EAA0D;AACxD,aAAO,KAAKK,aAAL,CAAmBF,IAAnB,EAAyBG,KAAKN,GAAL,CAAzB,EAAoC,EAACO,QAAD,EAAWL,SAAX,EAApC,CAAP;AACD,KAFD,MAEO;AACL,UAAIK,QAAJ,EAAc,OAAOA,QAAP;AACd,UAAIL,SAAJ,EAAe,MAAMA,SAAN;AAChB;AACF;AAvD6B;kBAAXxB,U","file":"configJSON.js","sourcesContent":["/**\n * Created by macdja38 on 2016-09-18.\n */\n\"use strict\";\nimport \"babel-core/register\";\nimport \"source-map-support/register\";\n\nimport * as fs from \"fs\";\nimport * as path from \"path\";\n\nexport default class ConfigJSON {\n  /**\n   * Instantiates a config object.\n   * @param fileName\n   */\n  constructor({fileName}) {\n    this._fileName = fileName;\n    this._filePath = path.join(__dirname, `../../config/config/${this._fileName}.json`);\n    this._fileExamplePath = path.join(__dirname, `../../config/example/${this._fileName}.example.json`);\n    this.reload();\n  }\n\n  reload() {\n    try {\n      var rawFile = fs.readFileSync(this._filePath, \"utf8\")\n    } catch (err) {\n      if (err.code === \"ENOENT\") {\n        console.error(`Config file ${this._fileName} not found in ${this._filePath} copying default from ${this._fileExamplePath} Please edit it to your liking.`);\n        fs.writeFileSync(this._filePath, fs.readFileSync(this._fileExamplePath, \"utf8\"));\n        console.error(`Config file ${this._fileName} was copied to ${this._filePath}, please edit it to your liking.`);\n        throw new Error(`Missing ${this._fileName}.json`)\n      }\n    }\n\n    try {\n      this._data = JSON.parse(rawFile);\n    } catch (err) {\n      throw new Error(`Invalid JSON in ${this.name}.json`)\n    }\n  }\n\n  /**\n   * get a key from the config. will accept a fallBack value or throw if failThrow is defined.\n   * @param key\n   * @param fallBack\n   * @param failThrow\n   * @returns {*}\n   */\n  get(key, {fallBack, failThrow}) {\n    if (failThrow) failThrow = `Error Property ${key} does not exist on ${this._fileName}`;\n    let keys = key.split(\".\");\n    return this._recursiveGet(keys, this._data, {fallBack, failThrow});\n  }\n\n  _recursiveGet(keys, data, {fallback, failThrow}) {\n    if (keys.length === 0) {\n      return data;\n    }\n    let key = keys.shift();\n    if (typeof data === \"object\" && data.hasOwnProperty(key)) {\n      return this._recursiveGet(keys, data[key], {fallback, failThrow});\n    } else {\n      if (fallback) return fallback;\n      if (failThrow) throw failThrow;\n    }\n  }\n}"]}