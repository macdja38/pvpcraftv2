{"version":3,"sources":["../../src/utils/MusicDB.js"],"names":["console","log","musicDB","constructor","r","table","searchCache","videoCache","discordFMCache","ensureTable","getAll","args","saveQueue","info","queue","status","id","guild_name","server","name","text","text_id","voice","voice_id","insert","conflict","run","saveVid","linkHash","link","video","timeFetched","Date","now","getVid","hash","get","saveSearch","string","result","getSearch","saveDiscordFMPlaylist","playlist","getDiscordFMPlaylist"],"mappings":"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","file":"MusicDB.js","sourcesContent":["/**\r\n * Created by macdja38 on 2016-11-26.\r\n */\r\n\"use strict\";\r\nimport \"babel-core/register\";\r\nimport \"source-map-support/register\";\r\n\r\nimport BaseDB from \"./BaseDB\";\r\n\r\nconsole.log(BaseDB);\r\n\r\nexport class musicDB extends BaseDB {\r\n  constructor(r) {\r\n    super(r);\r\n    this.table = \"queue\";\r\n    this.searchCache = \"searchCache\";\r\n    this.videoCache = \"videoCache\";\r\n    this.discordFMCache = \"discordFMCache\";\r\n    this.ensureTable(\"queue\", {});\r\n    this.ensureTable(this.searchCache);\r\n    this.ensureTable(this.videoCache);\r\n    this.ensureTable(this.discordFMCache);\r\n  }\r\n\r\n  getAll(...args) {\r\n    return this.r.table(this.table).getAll(...args);\r\n  }\r\n\r\n  saveQueue(info, queue) {\r\n    let status = {\r\n      id: info.id,\r\n      guild_name: info.server.name,\r\n      text: info.text.name,\r\n      text_id: info.text.id,\r\n      voice: info.voice.name,\r\n      voice_id: info.voice.id,\r\n      queue: queue\r\n    };\r\n    return this.r.table(this.table).insert(status, {conflict: \"replace\"}).run();\r\n  }\r\n\r\n  saveVid(linkHash, link, video) {\r\n    video.id = linkHash;\r\n    video.link = link;\r\n    video.timeFetched = Date.now();\r\n    return this.r.table(this.videoCache).insert(video, {conflict: \"replace\"}).run();\r\n  }\r\n\r\n  getVid(hash) {\r\n    return this.r.table(this.videoCache).get(hash).run();\r\n  }\r\n\r\n  saveSearch(string, result) {\r\n    return this.r.table(this.searchCache).insert({id: string, result: result, timeFetched: Date.now()}, {conflict: \"replace\"}).run();\r\n  }\r\n\r\n  getSearch(string) {\r\n    return this.r.table(this.searchCache).get(string).run();\r\n  }\r\n\r\n  saveDiscordFMPlaylist(id, playlist) {\r\n    return this.r.table(this.discordFMCache).insert({id, playlist}, {conflict: \"replace\"}).run();\r\n  }\r\n\r\n  getDiscordFMPlaylist(id) {\r\n    return this.r.table(this.discordFMCache).get(id).run();\r\n  }\r\n}\r\n\r\nexport default musicDB;"]}