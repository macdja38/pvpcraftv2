{"version":3,"sources":["../../src/utils/MusicPlayer.js"],"names":["MusicPlayer","constructor","adapter","guild","text","voice","queue","musicDB","music","_adapter","_musicDB","length","init","id","then","play","channel","joinVoiceChannel","connection","add","video","console","log","url","getStreamUrl","getCachingInfoLink","link","pause"],"mappings":"AAAA;;;AAGA;;;;;;;AACA;;AACA;;;;AAEO,MAAMA,WAAN,CAAiB;AACtBC,cAAYC,OAAZ,EAAqBC,KAArB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,OAAhD,EAAyDC,KAAzD,EAAgE;AAC9D,SAAKC,QAAL,GAAgBP,OAAhB;AACA,SAAKQ,QAAL,GAAgBH,OAAhB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKL,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,QAAGA,SAASA,MAAMK,MAAN,GAAe,CAA3B,EAA8B;AAC5B,WAAKC,IAAL,CAAUP,MAAMQ,EAAhB,EAAoBC,IAApB,CAAyB,MAAI;AAC3B,aAAKC,IAAL;AACD,OAFD;AAGD;AACF;;AAEKH,MAAN,CAAWI,OAAX,EAAoB;AAAA;;AAAA;AAClB,aAAO,MAAKP,QAAL,CAAcQ,gBAAd,CAA+BD,OAA/B,EAAwCF,IAAxC,CAA6C,sBAAc;AAChE,cAAKI,UAAL,GAAkBA,UAAlB;AACD,OAFM,CAAP;AADkB;AAInB;;AAEDC,MAAIC,KAAJ,EAAW,CAEV;;AAEKL,MAAN,GAAa;AAAA;;AAAA;AACX,UAAI,OAAKT,KAAL,CAAWK,MAAX,GAAoB,CAAxB,EAA2B;AACzBU,gBAAQC,GAAR,CAAY,OAAZ,EAAqB,OAAKhB,KAA1B;AACA,YAAIiB,MAAM,OAAKf,KAAL,CAAWgB,YAAX,EAAwB,MAAM,OAAKhB,KAAL,CAAWiB,kBAAX,CAA8B,OAAKnB,KAAL,CAAW,CAAX,EAAcoB,IAA5C,CAA9B,EAAV;AACAL,gBAAQC,GAAR,CAAYC,GAAZ;AACA,eAAKL,UAAL,CAAgBH,IAAhB,CAAqBQ,IAAIA,GAAzB;AACD;AANU;AAOZ;;AAEDI,UAAQ,CAEP;AArCqB;;QAAX3B,W,GAAAA,W;kBAwCEA,W","file":"MusicPlayer.js","sourcesContent":["/**\r\n * Created by macdja38 on 2016-11-26.\r\n */\r\n\"use strict\";\r\nimport \"babel-core/register\";\r\nimport \"source-map-support/register\";\r\n\r\nexport class MusicPlayer{\r\n  constructor(adapter, guild, text, voice, queue, musicDB, music) {\r\n    this._adapter = adapter;\r\n    this._musicDB = musicDB;\r\n    this.music = music;\r\n    this.guild = guild;\r\n    this.text = text;\r\n    this.voice = voice;\r\n    this.queue = queue;\r\n    if(queue && queue.length > 0) {\r\n      this.init(voice.id).then(()=>{\r\n        this.play();\r\n      })\r\n    }\r\n  }\r\n\r\n  async init(channel) {\r\n    return this._adapter.joinVoiceChannel(channel).then(connection => {\r\n      this.connection = connection;\r\n    });\r\n  }\r\n\r\n  add(video) {\r\n\r\n  }\r\n\r\n  async play() {\r\n    if (this.queue.length > 0) {\r\n      console.log(\"queue\", this.queue);\r\n      let url = this.music.getStreamUrl(await this.music.getCachingInfoLink(this.queue[0].link));\r\n      console.log(url);\r\n      this.connection.play(url.url);\r\n    }\r\n  }\r\n\r\n  pause() {\r\n\r\n  }\r\n}\r\n\r\nexport default MusicPlayer;\r\n"]}