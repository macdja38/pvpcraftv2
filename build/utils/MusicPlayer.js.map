{"version":3,"sources":["../../src/utils/MusicPlayer.js"],"names":["MusicPlayer","constructor","adapter","guild","text","voice","queue","currentSong","musicDB","music","_adapter","_musicDB","repeat","fallbackQueue","ready","connecting","songStartTime","Date","now","length","push","init","id","then","play","saveQueue","guild_name","name","text_id","voice_id","saveCurrentSong","addListeners","connection","oldConnection","removeListeners","on","onEnd","bind","onWarn","onDebug","onDisconnect","removeListener","queueRandomPlaylist","playlist","getCachedDiscordFMPlaylist","console","log","newSong","Math","floor","random","link","url","user","args","error","lastVideo","shift","disconnect","channel","joinVoiceChannel","add","user_id","user_name","getStreamUrl","getCachingInfoLink","startTime","result","encoderArgs","pause"],"mappings":"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","file":"MusicPlayer.js","sourcesContent":["/**\r\n * Created by macdja38 on 2016-11-26.\r\n */\r\n\"use strict\";\r\nimport \"babel-core/register\";\r\nimport \"source-map-support/register\";\r\n\r\nexport class MusicPlayer {\r\n  constructor(adapter, guild, text, voice, queue, currentSong, musicDB, music) {\r\n    this._adapter = adapter;\r\n    this._musicDB = musicDB;\r\n    this.music = music;\r\n    this.guild = guild;\r\n    this.text = text;\r\n    this.voice = voice;\r\n    this.queue = queue;\r\n    this.repeat = false;\r\n    this.fallbackQueue = \"electro-hub\";\r\n    this.ready = false;\r\n    this.connecting = false;\r\n    this.currentSong = currentSong;\r\n    this.songStartTime = Date.now();\r\n    if (queue && (queue.length > 0 || currentSong )) {\r\n      if (currentSong) this.queue.push(currentSong);\r\n      this.init(voice.id).then(() => {\r\n        this.play();\r\n      })\r\n    }\r\n  }\r\n\r\n  saveQueue() {\r\n    this._musicDB.saveQueue({\r\n      id: this.guild.id,\r\n      guild_name: this.guild.name,\r\n      text: this.text.name,\r\n      text_id: this.text.id,\r\n      voice: this.voice.name,\r\n      voice_id: this.voice.id,\r\n    }, this.queue)\r\n  }\r\n\r\n  saveCurrentSong() {\r\n    this._musicDB.saveCurrentSong({\r\n      id: this.guild.id,\r\n      guild_name: this.guild.name,\r\n      text: this.text.name,\r\n      text_id: this.text.id,\r\n      voice: this.voice.name,\r\n      voice_id: this.voice.id,\r\n    }, this.currentSong);\r\n  }\r\n\r\n  addListeners(connection, oldConnection) {\r\n    if (oldConnection) {\r\n      this.removeListeners(oldConnection);\r\n    }\r\n    connection.on(\"end\", this.onEnd.bind(this));\r\n    connection.on(\"warn\", this.onWarn.bind(this));\r\n    connection.on(\"debug\", this.onDebug.bind(this));\r\n    connection.on(\"disconnect\", this.onDisconnect.bind(this));\r\n  }\r\n\r\n  removeListeners(oldConnection) {\r\n    oldConnection.removeListener(\"end\", this.onEnd);\r\n    oldConnection.removeListener(\"warn\", this.onWarn);\r\n    oldConnection.removeListener(\"debug\", this.onDebug());\r\n    oldConnection.removeListener(\"disconnect\", this.onDisconnect());\r\n  }\r\n\r\n  async queueRandomPlaylist(id) {\r\n    let playlist = await this.music.getCachedDiscordFMPlaylist(id);\r\n    console.log(\"playlist\", playlist);\r\n    let newSong = playlist.playlist[Math.floor(Math.random() * playlist.playlist.length)];\r\n    this.queue.push({link: newSong.url, user: \"103607047383166976\"});\r\n  }\r\n\r\n  async onEnd(...args) {\r\n    console.error(\"End\", ...args);\r\n    let lastVideo = this.queue.shift();\r\n    if (this.repeat) this.queue.push(lastVideo);\r\n    else if (this.fallbackQueue) {\r\n      await this.queueRandomPlaylist(this.fallbackQueue);\r\n    }\r\n    if (this.queue.length > 0) {\r\n      this.play();\r\n    }\r\n    this.saveQueue();\r\n  }\r\n\r\n  onWarn(...args) {\r\n    console.error(\"Warn\", ...args);\r\n  }\r\n\r\n  onDebug(...args) {\r\n    console.error(\"Debug\", ...args);\r\n  }\r\n\r\n  onDisconnect(...args) {\r\n    console.error(\"Disconnected\", ...args);\r\n    this.connection.disconnect(null, true);\r\n  }\r\n\r\n  async init(channel) {\r\n    return this._adapter.joinVoiceChannel(channel).then(connection => {\r\n      let oldConnection = this.connection;\r\n      this.connection = connection;\r\n      this.addListeners(connection, oldConnection);\r\n    });\r\n  }\r\n\r\n  add(link, user) {\r\n    this.queue.push({link, user_id: user.id, user_name: user.name});\r\n    this.saveQueue();\r\n  }\r\n\r\n  async play() {\r\n    if (this.queue.length > 0) {\r\n      console.log(\"queue\", this.queue);\r\n      let url;\r\n      try {\r\n        url = this.music.getStreamUrl(await this.music.getCachingInfoLink(this.queue[0].link));\r\n      } catch (error) {\r\n        this.onEnd();\r\n        return;\r\n      }\r\n      this.currentSong = {link: this.queue[0], user_id: this.queue[0].user_id, startTime: Date.now()};\r\n      this.saveCurrentSong();\r\n      console.log(\"Attempting to play \" , url);\r\n      console.log(\"Current connection status Ready:\", this.connection.ready, \" connecting:\", this.connection.connecting);\r\n      let result = await this.connection.play(url.url, {encoderArgs: [\"-c\", \"copy\"]});\r\n      console.log(\"Play result \", result);\r\n    }\r\n  }\r\n\r\n  pause() {\r\n\r\n  }\r\n}\r\n\r\nexport default MusicPlayer;\r\n"]}